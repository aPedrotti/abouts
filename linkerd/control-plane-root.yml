---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBFL1hFMzFEaDh5UzVEUmNITFZnVFF3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TURFM01qTTFNREU0V2hjTk1qTXhNREUzTWpNMU1ERTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU1FbHNzWkd6aEM2QkNQS3c0M1hSTzJ2YjNUWlQ4K3NzejJsVFkvRHhJZVBsa0kwenJVMwpGUVhVc2hSY1F0MlFQd3V5Q0dDVndTbTNWaTMrSjdpb29lQW1iVjhFSERXQ2xFWUMrZTRDdHR0ZnFHaitPK1B4ClZ2OTg2UGt0SmJHUGlobENvY2l2and0ZkFna2QvV3VIc0ZHdTVER2xnOXcrTXYxZ1JCTHc1Qm9RVEE0Y0piZHkKNUt5RXRDR3hLazE0MWdYZGw3clNxSzQwanRCbi9vakE5TGhxYUpML2dNd1d0WHdQZGtjc1p1ZUxWc1lMcTlragpsRXh3VjZpRzRLMksxL0EvQzZ5MkEvcElpNzhlRE9nQzBGMlRQdmZuWUx5Ym1sbWRFQUI5WmZwVWhhQmhZbE1aCmdtRUlUVXlGWlgzL1FBSkV4a2xZa3NZV2JjenlkdjdoM1E4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBUHFHTi85dmZzczR4NEhrQ1FmbzMyNC83SUlRUnFSanZSSTFvVSs3eXQKRFFkaU91Wi9YamEzTEdMRmdYbmR0RFp4MmJod3BuY3lFcUZreHUwSlNMTDJlbmlackNJbkxuQVJYWlE5ZVhaRQp0enVYRS9YWVNiRW55VXBpOWJvQU55ZlFVS1RFN0hQSWpwRVFpWGF1TEtGTEFSb0pVSDE1U2ZScGJkRVRhNWJJCnRJYUhseXNhZnNicWtEZkdHRkRxSW5GSWt6TFNRWVJUdkFhWDU1Q2E0QU9vL2c4UDJjZzM3UE10Q25jbDg1eisKdlhEMFNUZTVSRGswaURVcUhiMkR5S3E1UUZLZm5PMUZLZ0xwUWxNOXpSRnY4UlozMnJRaytkZ1BDQXFxQmhVbgpPSUIxNytRbU1pV1JmV3JqYXV3UFVTUlh2NWVTSGJ2YVBxOEIrckNsUzRSQQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1NXeXhrYk9FTG9FSThyRGpkZEU3YTl2ZE5sUHo2eXpQYVZOajhQRWg0K1dRalRPCnRUY1ZCZFN5RkZ4QzNaQS9DN0lJWUpYQktiZFdMZjRudUtpaDRDWnRYd1FjTllLVVJnTDU3Z0syMjErb2FQNDcKNC9GVy8zem8rUzBsc1krS0dVS2h5SytQQzE4Q0NSMzlhNGV3VWE3a01hV0QzRDR5L1dCRUV2RGtHaEJNRGh3bAp0M0xrcklTMEliRXFUWGpXQmQyWHV0S29yalNPMEdmK2lNRDB1R3Bva3YrQXpCYTFmQTkyUnl4bTU0dFd4Z3VyCjJTT1VUSEJYcUliZ3JZclg4RDhMckxZRCtraUx2eDRNNkFMUVhaTSs5K2Rndkp1YVdaMFFBSDFsK2xTRm9HRmkKVXhtQ1lRaE5USVZsZmY5QUFrVEdTVmlTeGhadHpQSjIvdUhkRHdJREFRQUJBb0lCQUN2V3ZhUUpVQjQxeWxqQgpYZTlreSsxUzQyNVhJS2xYWG51QWVJRklBdVJ0NzhIcE1IMnJHZWR2NWxkK3RXS0txZlNpblFvbkUyZS9pQno2ClVkTzAyc0VBbDlSNEgxcjUzMk9ncTArZGFCbVV0YW5YQW9yekxUYmlDQkwrYjA3RThLaFpHbFZ0bTM4T09tME4KVkliQ2puK0x2Wm1USXNHcmtIRTRGMXRoTjdTK1Z5MmwycTJWWWtaTEFGWmc3Wmd3NitCdkw2bU8wdnBYcFRjKwpaZ2ltNW5MVEpFN2s4SXZyWkpKaU5la0s4RnYxRGNKdzVxUmxqNk9GSDR4L0p3Nm9zcS9hQTNBVDJlQjhJczJmCm9JNWFmbmNWV3M1cVUwNWIxYUNxS0plZmhRVFFVR1orcityRE5HalM4VE1HUzdUN1VheCsxYkV6cEVmd2pFNTEKSHlGUkhFRUNnWUVBMVZwVXQyNUYvdnpTUnIrTGFmUGFuY21JTDU0ZElnZUFFYlBqQTg0WHpzR1RxUHhlZnBpSgpOL28yWW9tV2JYSGE4SzlSYUZXSEhZdDRFbWxkWStCZm5UWEQxN25DTnhVWVZkSnlnV1RtUElWNVpqTEJKbTJuCm9pWkZZTE1rWTRDRGt6by9WQ0VHdGREZi9rNFZHeDRBQTh3THFIN3BpalZMRk13dDZFSmVXYThDZ1lFQTU4Rm8KcXAzcXNVVWNOUEhxZXZUN1Y1N3BjamdIdzRVNGYyYjZGdGw4TVo3RHcyejFoUTFVaERTdWd2S2hRZUdzMjc3ZwpQclVXTUxDdEMwWENONnY1amg1NkhSd1VXRzNJMTRnRW8zT2pqeS8rOTJ6Yi9QNkxpZnFFdklHTFFJZVlndVhxCm1QUG9sR3hmSTdZTFpIWHdmZm1JRnhoc2tHbDQ0OUhHNDFWbmFxRUNnWUFDcTJLcitPRS9VNEorQ0IrQ2I5Nm8KWXNFbGQyRDk4QUlXTnAzOGlqT2FEcW4rVDBvUFkzRTBGaGxnR2tDYmxmVWJWZFk2Ni9jSTA1bnBBUkIrRTJ5ZQoxdkZnWFo2a2Vjc1lKODN1K0lnNDhhS1hPTU5aNjcxUk5oRmdLRjJvTVE5MFpDSXV0MHNTTTA3YUs3ZnY0dXcxCkgvUjFZMEVnelpIbTdMY1dWTjVCV1FLQmdRQyt0YytWcDBHOEFxMEZmSldCL1JyZnJhdFpESGFIRkplN2IxZ1oKZVhyVHNseFI4dFhQV1hyVkdDMExJUEpHTHBsNmN3WkJVKzhndmlLSUJpMmVkbXh6NE95SUM5VktOMzF3cjBOeAo1ZlVRSFdUbzRySGM3UEtTNW81WU9Sb0lUZ3pZbXE2RWt5SXZFVWJ4TWhzSjNtdTZucDY0c3FhVDU5ZE5VaEVpCmZlTU9RUUtCZ0hYaStYM3lpSU56ZmxGclkrUHNEdEZPK3A1K3FjNXdjdmtCak9CYUgvMVo5NFNpWW10TGYxKzYKTFZGYnlKNVdWRUh2Y0hpVThJOGJJZUg1OXlqUDRXRGZyM2ZENGVPdHdBaDNlWUpmT01JendDWWpyZjdzNjJJVAo3RC9DWW8wRWlXeFFTV0c2ejFKOTY1R1FoaGtNclVWQUZsQjdWckZrMlBWZWFuaHlmVGpPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBFL1hFMzFEaDh5UzVEUmNITFZnVFF3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TURFM01qTTFNREU0V2hjTk1qTXhNREUzTWpNMU1ERTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU1FbHNzWkd6aEM2QkNQS3c0M1hSTzJ2YjNUWlQ4K3NzejJsVFkvRHhJZVBsa0kwenJVMwpGUVhVc2hSY1F0MlFQd3V5Q0dDVndTbTNWaTMrSjdpb29lQW1iVjhFSERXQ2xFWUMrZTRDdHR0ZnFHaitPK1B4ClZ2OTg2UGt0SmJHUGlobENvY2l2and0ZkFna2QvV3VIc0ZHdTVER2xnOXcrTXYxZ1JCTHc1Qm9RVEE0Y0piZHkKNUt5RXRDR3hLazE0MWdYZGw3clNxSzQwanRCbi9vakE5TGhxYUpML2dNd1d0WHdQZGtjc1p1ZUxWc1lMcTlragpsRXh3VjZpRzRLMksxL0EvQzZ5MkEvcElpNzhlRE9nQzBGMlRQdmZuWUx5Ym1sbWRFQUI5WmZwVWhhQmhZbE1aCmdtRUlUVXlGWlgzL1FBSkV4a2xZa3NZV2JjenlkdjdoM1E4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBUHFHTi85dmZzczR4NEhrQ1FmbzMyNC83SUlRUnFSanZSSTFvVSs3eXQKRFFkaU91Wi9YamEzTEdMRmdYbmR0RFp4MmJod3BuY3lFcUZreHUwSlNMTDJlbmlackNJbkxuQVJYWlE5ZVhaRQp0enVYRS9YWVNiRW55VXBpOWJvQU55ZlFVS1RFN0hQSWpwRVFpWGF1TEtGTEFSb0pVSDE1U2ZScGJkRVRhNWJJCnRJYUhseXNhZnNicWtEZkdHRkRxSW5GSWt6TFNRWVJUdkFhWDU1Q2E0QU9vL2c4UDJjZzM3UE10Q25jbDg1eisKdlhEMFNUZTVSRGswaURVcUhiMkR5S3E1UUZLZm5PMUZLZ0xwUWxNOXpSRnY4UlozMnJRaytkZ1BDQXFxQmhVbgpPSUIxNytRbU1pV1JmV3JqYXV3UFVTUlh2NWVTSGJ2YVBxOEIrckNsUzRSQQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRZXNUQ21BQ1FFczRXWWJ5TE4rb0gvekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1ERTNNak0xTURFNVdoY05Nak14TURFM01qTTFNREU1V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURBSTVsaldUT0NJUVd1bHhmRTZabkd6em9nRlBNelJaN0wzcG9FZHJyVwpXMW96WFh1MEJwdjZPU0dsM3gxYU1RRk5VKzNmbEQ0TWNnUGQ4SGxWMmNCdHVEcGJzRVV5VkgrOEZCbjNOUEllCmcyNm1JWTZSUi9VYWEyMUtaaHdTVy81NHBXa0xIeW5EbENES0dHUkxNZ2g3QkRKN0VQVVIyR0ZSanpScGVqMGsKeWlHMDJKK3ZVMStLMDUzams0L2FBNTlWTm5vYXlyc0lsczBZV29Rb0liUUlUWm9JV2NUZFZDMHpFZUlWbkhrVwp1NVJ5OFdpMCs1OUpPRmF1UXlManpLa3h6MVJGOXpJSXk5bk5hS2EzSGtjSE95VDBzU1pHbmMyU0NyUy82cEFTCjc4RjFZa3dZVElUbnRrcytwWUEvZzMrUlJ5ZnY3dmVYWC9HSUEydXdjNm85QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEMXFlaFZiOWFkcFByN1QrTURzOGhCMk1jbkEKeFJuMnF4bWp5TEdrQ0JGb0xycU02eEo1VUJTMm5DOUxncVRQMFYyTnJnbnpHN0VmL1dvMzdlRWFwVU55UWpGWAowUGpGY0xPVUdvL291TlVacFJ6MmVmbkZVb2JMdE9WYWpDNUp5OEhNWERaMGVETkRqV0xoamhhaTE4MG9zOTlPCnl0QkhZaUh6MGh6MUF0cGxseFZGWkdoVldrTzROdWRhSVJLY2d1ZFRaNlNXb0tmQUdETjkzZGlHeDBmbEdyVlAKM0Y0L0l0ZWlBd0ZHZUdjQmhxOVYyaU5jeERxemRROUI5c3VZN0JjRmxXL2x4d05KdGtUdVZHWkxWTlNLWEl4KwpaUmtZdm1Cb09UbWxWd3JvR3RWYm5aZm0wb3d1bTdMWlVUbHllNmhJWVdNMlUzMk9OSXRVNEloMEtTOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0NPWlkxa3pnaUVGcnBjWHhPbVp4czg2SUJUek0wV2V5OTZhQkhhNjFsdGFNMTE3CnRBYWIramtocGQ4ZFdqRUJUVlB0MzVRK0RISUQzZkI1VmRuQWJiZzZXN0JGTWxSL3ZCUVo5elR5SG9OdXBpR08Ka1VmMUdtdHRTbVljRWx2K2VLVnBDeDhwdzVRZ3loaGtTeklJZXdReWV4RDFFZGhoVVk4MGFYbzlKTW9odE5pZgpyMU5maXRPZDQ1T1AyZ09mVlRaNkdzcTdDSmJOR0ZxRUtDRzBDRTJhQ0ZuRTNWUXRNeEhpRlp4NUZydVVjdkZvCnRQdWZTVGhXcmtNaTQ4eXBNYzlVUmZjeUNNdlp6V2ltdHg1SEJ6c2s5TEVtUnAzTmtncTB2K3FRRXUvQmRXSk0KR0V5RTU3WkxQcVdBUDROL2tVY243KzczbDEveGlBTnJzSE9xUFFJREFRQUJBb0lCQUNLQ2dsdFl1eXFsT2JzSgpBa2pvMkNqZ01ZVnZuZHJZcDFQZ3NITWF6Q1lTRkZwamNRTjlxR2hCK0t3dExiMTBUZEtRdjRuSHUzbEt4UzBJCnN4SmJZUGVUL2s5WGtxWWVqUzYvd1lZb0tWQ1h0TGo4RC9wQ0hXRFlhTEhUTXptTThtREMvT0gxZisvVDNDdlEKUTd0SnlrSW1GOWNJemF1ZDNLVGtmcnB2TFNvOUlDckcyZEhVUlNZZGtzVklxRWFaUVRZRncxbUR3OWVTOUcySQpMaVhuWlNvcnB6TjRtakdabE9BS3VpM1Y2ck1oYTQ3NTM5bVRCN0dGdlVzekZoZHJNaHlIZnNWMFJ2WEdkRVhvCjhKQjNKUHE3bXlMa0x1bWQ3elFZcG1wcnBPcHNOSTFHWjlERWxmcnczUUpIa2V0dE00UW5KWExXd1BSaUw3VFQKUTdtcDlKVUNnWUVBMTNEdVQreWFjakNYRWFrOFdjcDdYS2F1aS9yVmtUdW1Hdmdva2lpeWwvTFlkOC9CdC9Ccwo4eHlDbTV5NU91MCtjTzEvSjFySklzMTYzSmdzejErZGs5R2JodjFGVitlb0d0OHRDaDdodUpXWjNPRkl1NHJqClU5REJMeGtNWjJtMmdraVltM3RVRFFTbDBrNU9MSHVYT0xRdjJtV3E4bHdEVmk1SUw5SGZ6YjhDZ1lFQTVFK2oKSTFCZUZhL3o3clVrOWRVS0ZLSnE3bmQrQ2l2S0RJWHJ0SDNZYjMrTXp6K1VWcndsOWVwSjVLaFhLL1VvM3QvMApIbGwxMjF3RmlJRzd2T3R3WEUyZHRidEpLdzNSYlYzR2pUdEV4SU5TQ0ltNzJSRXVXdFFFQm1EOUw3cFFzU3RnCkNNeU1HZ2dFcWdXVG9ZOHVPQmE3UmNFbmVDV3lnc3ZlRUJIZC93TUNnWUJPSVRkYnBzdVA4ODBsYTRGbWNzYncKSDhhWEh4MUtjUjVaRTN2ckhYVS9JNk9iTjYzaUhmLzAzbmNESmdBS3ZiVHlVVDdXcjliWGx6c2lPdEd0VnRpWApuZUZRUUJOZ3dMTTNJNDU2NkI0bHlhTWw5bEZoS2dvdEFEeSs3cytQeFVlWjBlZitJdWlsVy9VaTRxRDVBczBoCmxEN3liZ0pqcURqUmpURkNubE1Ta3dLQmdCb0FsK3ZsczFGMUFLc25KbFo1TlBTMHFza09BdVRWcCtWVk8wc0wKS2lOSXU1aSsvUDREMzY3cVNCQXF2QUxkb1JJQkg2UjFPOThIMC9tQURRbXZKdFRjWWlIWWVyVFVsZzJHcUo1ZApLYS9YNVBmajkrajQ4L2FVUHdFYStycjgxVVBZVk0rcnZDa2EwSzBzaFd2WkNzS0lsRHVWakJFNitlRzdwa2JlClFoSlJBb0dCQUtUa3JUMXRaVTcxWlAwUDlVMG16eXhQV3gwSmh0SUhWWVlBM2RaVmRRdGdLcDd2bG11TERrbWkKQzQ5eHhTSzR0TEJDQ1hLN0srMlhhZUd1eXdnOUJDK1IxYjhvSHVrWHRuQ2Z3WHNpTEFhcm5xZitXVnBLb3Vvdwpta1lUUnBPL0c0Q2tFTWVMN1lscU54WjYvZ1pZU0toSCt0T1pGT3U0L3FxMGpQT05HWGFlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRZXNUQ21BQ1FFczRXWWJ5TE4rb0gvekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1ERTNNak0xTURFNVdoY05Nak14TURFM01qTTFNREU1V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURBSTVsaldUT0NJUVd1bHhmRTZabkd6em9nRlBNelJaN0wzcG9FZHJyVwpXMW96WFh1MEJwdjZPU0dsM3gxYU1RRk5VKzNmbEQ0TWNnUGQ4SGxWMmNCdHVEcGJzRVV5VkgrOEZCbjNOUEllCmcyNm1JWTZSUi9VYWEyMUtaaHdTVy81NHBXa0xIeW5EbENES0dHUkxNZ2g3QkRKN0VQVVIyR0ZSanpScGVqMGsKeWlHMDJKK3ZVMStLMDUzams0L2FBNTlWTm5vYXlyc0lsczBZV29Rb0liUUlUWm9JV2NUZFZDMHpFZUlWbkhrVwp1NVJ5OFdpMCs1OUpPRmF1UXlManpLa3h6MVJGOXpJSXk5bk5hS2EzSGtjSE95VDBzU1pHbmMyU0NyUy82cEFTCjc4RjFZa3dZVElUbnRrcytwWUEvZzMrUlJ5ZnY3dmVYWC9HSUEydXdjNm85QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEMXFlaFZiOWFkcFByN1QrTURzOGhCMk1jbkEKeFJuMnF4bWp5TEdrQ0JGb0xycU02eEo1VUJTMm5DOUxncVRQMFYyTnJnbnpHN0VmL1dvMzdlRWFwVU55UWpGWAowUGpGY0xPVUdvL291TlVacFJ6MmVmbkZVb2JMdE9WYWpDNUp5OEhNWERaMGVETkRqV0xoamhhaTE4MG9zOTlPCnl0QkhZaUh6MGh6MUF0cGxseFZGWkdoVldrTzROdWRhSVJLY2d1ZFRaNlNXb0tmQUdETjkzZGlHeDBmbEdyVlAKM0Y0L0l0ZWlBd0ZHZUdjQmhxOVYyaU5jeERxemRROUI5c3VZN0JjRmxXL2x4d05KdGtUdVZHWkxWTlNLWEl4KwpaUmtZdm1Cb09UbWxWd3JvR3RWYm5aZm0wb3d1bTdMWlVUbHllNmhJWVdNMlUzMk9OSXRVNEloMEtTOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUxFM09qZGRRSGkzQStKK2NPSmd4TGd3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpFd01UY3lNelV3TVRoYUZ3MHlNekV3TVRjeU16VXdNVGhhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRREdNYzF0YlVQSjVaVDk2blZwbkxmSm82TFNWQ21IK1g5dU5rMW9scmYrNWVNZgoveGJwTG93anNPUzhCWmthMis2aEF1NWZQUWYyQTNSMnR6OFV4TmYyUEd6TGNuMkFGdnJmTkpneWdyNGRVZkdOCllucWkxemx2UVkyVFA2TDNqbWsyMEdnUnJsTCtoR28yVFNGUThnUHIrUlNVcFhHczYyRXhFNGRKZlZUSCtrRlIKbFdjTm8zamRiSGRoT0M5WFkvVlVHOXpJNHZoai9JOWFzQk5CTm5oRVY1Y2FvMEZtcHhhU2N0MDAycnk3NEFTcAoyZjIxSVFvWDdQc2hteFRSV3p0UC9mS0ZDOFdJZ2dZUHpPZW9vejBGOXQ4ZVIwcEttQ2RqbmFpZU5qdVpwOTZ6CmwrN2VTa1NRVUdEanFmblhCWEFGRUtBcnp4VEpUeElhUHF2dzN1NW5BZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNtajBGNWo4NGdIMHJRcmswY2R5TU5lSE1CNzJGTVdDN3cKRCtiMEZ6QUlxUzFrVk55TnRPRGpoT2xRdVFBSHBPd0NNbk9HT0Q2Mncrakx2R0crQmp0SjI1Y1h3NTR2WEorNgo2R3gxaXFOQlZhbWIxQm1XTzZHQVNGbkFtOGZBOUZwWWZ6dkNLS1lBL2lET1hCOTM2MDUrcmcvK0Y2bS94Z1RGCjR6alo2SnQwcFU5NjFoNGlHVWtMWHZ3ZEtDbzNGYU5rTTI5TC80NFowcU13a0FRTksrYytpWnN6alRXY252aEoKQUtmNTZ1UzlPWWEvUit6QVBsNVF6ekllNnRVaERCL0QwK1E3SGRENWJBMzJTVlpRSGl3cm1KNG1uWTArR3ZSSApuVEZDTTVzR1FydVpUMjZNUk51NW9JTjRIVkNiUGh4SnZhM0JCVjFvTXRMcStIZmZJRVVZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeGpITmJXMUR5ZVdVL2VwMWFaeTN5YU9pMGxRcGgvbC9ialpOYUphMy91WGpILzhXCjZTNk1JN0RrdkFXWkd0dnVvUUx1WHowSDlnTjBkcmMvRk1UWDlqeHN5M0o5Z0JiNjN6U1lNb0srSFZIeGpXSjYKb3RjNWIwR05reitpOTQ1cE50Qm9FYTVTL29ScU5rMGhVUElENi9rVWxLVnhyT3RoTVJPSFNYMVV4L3BCVVpWbgpEYU40M1d4M1lUZ3ZWMlAxVkJ2Y3lPTDRZL3lQV3JBVFFUWjRSRmVYR3FOQlpxY1drbkxkTk5xOHUrQUVxZG45CnRTRUtGK3o3SVpzVTBWczdULzN5aFF2RmlJSUdEOHpucUtNOUJmYmZIa2RLU3Bnblk1Mm9ualk3bWFmZXM1ZnUKM2twRWtGQmc0Nm41MXdWd0JSQ2dLODhVeVU4U0dqNnI4Tjd1WndJREFRQUJBb0lCQUQ4R3pXWVVEaStoUTYwdgpweURyeG9KbitEcGNxMHhqYWtPNUh3cTRpMUNTK0pSUFFaRHJ6WUw0R1BVMTdvZGRFMWkrbnVGSWZrU2N1cWVhCkJJUnRTS1EwZVFDRnF5VlZxWGZidU42dk54Z0oyLy96Smo2c3BNWWRtWkVPOXBzMC9YNkI3ZVpaZ21rUDROcmQKMGs5MGR3ek9pOTN0Y3VYamdHZmo1dXpXMzJRc1FNVGxZaVIvbTE5amNtR1M3K2xNU3BLUDlYeVRJaHdHWExveQpsS21ReEg3bFZqSC9YVCtEeEtaaUNSUEZraG92bDFVMm91YzFveUhlK2JERlJHUDkzR2hneTJqTVp1emtwZE8vCnF0bkRaQkF1ZlpzQnczR0J0enplTVBraTJDakMvbUloZlBwRURlQTc5VmFrR3ZCNXZDWmVDSkZKei96VUllbVgKM2ZTVzNSa0NnWUVBMk1IWHE3SE9yTkJkMlZIYm5JOUozVzVrWDhLNHQySFRSdE4zeVNiU2xobk95YXBZL0pjQwpsWUpCKzF2YVQ2NVpLbXIyU0ViZ0o4a0FEcHBvdFJFSUdKNVh1anVLeGtML3NqcXNmSGtyWTRJVzNqVjU3MkgwCkVobXh4dDdzV01nQnhTcjRESXdUUkpERXY2V2IydEkwMWJJb05uYVlhVmRDS0VLek1SbWNaU01DZ1lFQTZoT2cKZ2sycjVRa2c3REhwUUFaamt5Q0M0S3hqeUFiSlRhR1oyOTZOVThGd1liN0pkaEhBaUhTL1UvejFzUmdSMjdqYQpQNzZhOTRRQVJwc2lKVVExbWVQUUFza0loakNMNHpBcWJDQSs5NDJ4NnlZejU0T3hmL2F1Njczd2pwSkd4elZSCnp4YVhKMEN2ejFqam5QcVA2UXdqOXNxOTZFMWgvZlFSM2QxYXorMENnWUErL0hVVGEyUEhTL1U1aFZQdnRxT2MKT012cUY4ZGRZb3ZtZE9UR0N3WCtvQms2K01sSy9RYS9NMDdCSC92Y1U2bU5iZStMS1MxUjRsS2w2N0NwalAxeApTZkhzS0FrM2U1aVp6ZnI1WUt4L0NmcGpMOTd5OU4vYnNxTzZTbVVibDJNTVRHUXdJVFFvSkhsSHgzUDJya2EwCklrVVZMbmt6Z3l1eVQwK0s0UXBWU1FLQmdRQzNjZFJMNmxVNXRQTEJTTWhVN2V6aHBBd055ZXlWR1lSdnU2TVoKNWd0NlJWSXV1RmVvbVhiN09ndXI1Y1lqR1FyOTJKdnFjeFY5djB4OENSNDBlSVZOYW5WZGlYR053TVFRczNHNwp0WFhEaXArUit5bVlXZVFrdGc0V0lKQkRHNjR1ZHNIN2V1ZlEwbWcySnFLVEp1YmJyREVQTzRxallPbllIWXhYCkJTQWpiUUtCZ1FDRVorc0phTDNQOWRHNDFhME55QjkyWmhpY2lRd3dKTEQrQUllK0p2MDVDbDVuZUpLYTB3SW0KNU1YcDgwUGdJS1NxdjNjQU0wa3hRbC9HMzBFYjdKMnhSdzQxNmV5QnlLRHZZSXBMOHhqN3hrK0pVdmMrbTE0ZgoyVXBkcDZwSzVlUFRZS1o2aXk2ejU3WEpza0NGcTRCaklkVlk5MGJQMDFKaHdLcE82eFJmUXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUxFM09qZGRRSGkzQStKK2NPSmd4TGd3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpFd01UY3lNelV3TVRoYUZ3MHlNekV3TVRjeU16VXdNVGhhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRREdNYzF0YlVQSjVaVDk2blZwbkxmSm82TFNWQ21IK1g5dU5rMW9scmYrNWVNZgoveGJwTG93anNPUzhCWmthMis2aEF1NWZQUWYyQTNSMnR6OFV4TmYyUEd6TGNuMkFGdnJmTkpneWdyNGRVZkdOCllucWkxemx2UVkyVFA2TDNqbWsyMEdnUnJsTCtoR28yVFNGUThnUHIrUlNVcFhHczYyRXhFNGRKZlZUSCtrRlIKbFdjTm8zamRiSGRoT0M5WFkvVlVHOXpJNHZoai9JOWFzQk5CTm5oRVY1Y2FvMEZtcHhhU2N0MDAycnk3NEFTcAoyZjIxSVFvWDdQc2hteFRSV3p0UC9mS0ZDOFdJZ2dZUHpPZW9vejBGOXQ4ZVIwcEttQ2RqbmFpZU5qdVpwOTZ6CmwrN2VTa1NRVUdEanFmblhCWEFGRUtBcnp4VEpUeElhUHF2dzN1NW5BZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNtajBGNWo4NGdIMHJRcmswY2R5TU5lSE1CNzJGTVdDN3cKRCtiMEZ6QUlxUzFrVk55TnRPRGpoT2xRdVFBSHBPd0NNbk9HT0Q2Mncrakx2R0crQmp0SjI1Y1h3NTR2WEorNgo2R3gxaXFOQlZhbWIxQm1XTzZHQVNGbkFtOGZBOUZwWWZ6dkNLS1lBL2lET1hCOTM2MDUrcmcvK0Y2bS94Z1RGCjR6alo2SnQwcFU5NjFoNGlHVWtMWHZ3ZEtDbzNGYU5rTTI5TC80NFowcU13a0FRTksrYytpWnN6alRXY252aEoKQUtmNTZ1UzlPWWEvUit6QVBsNVF6ekllNnRVaERCL0QwK1E3SGRENWJBMzJTVlpRSGl3cm1KNG1uWTArR3ZSSApuVEZDTTVzR1FydVpUMjZNUk51NW9JTjRIVkNiUGh4SnZhM0JCVjFvTXRMcStIZmZJRVVZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.1
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.1
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEwMTcyMzUwMDhaFw0yMzEwMTcyMzUwMjhaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEVESdPBUXQOv4qInyRetkChjEPJWO6T5SxQfgsoKr7kpMscX4Ne72NSf3PRJ8
            zScxebMlLieJbOKGJkNXwAvKoqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSv8BYXAy2nwMCDooWlA4qAT53rQjAKBggqhkjOPQQDAgNIADBFAiAzrcRroknQ
            Hd9LYUIBUCYuSjETQCbkesqS8/vybGIxNgIhALcPPoDZlzXcDgliRBsMhnBGWqVv
            prWOZa8Q5rMA3aMh
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEwMTcyMzUwMDhaFw0yMzEwMTcyMzUwMjhaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEVESdPBUXQOv4qInyRetkChjEPJWO6T5SxQfgsoKr7kpMscX4Ne72NSf3PRJ8
      zScxebMlLieJbOKGJkNXwAvKoqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSv8BYXAy2nwMCDooWlA4qAT53rQjAKBggqhkjOPQQDAgNIADBFAiAzrcRroknQ
      Hd9LYUIBUCYuSjETQCbkesqS8/vybGIxNgIhALcPPoDZlzXcDgliRBsMhnBGWqVv
      prWOZa8Q5rMA3aMh
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.1
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: stable-2.12.1
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: true
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV3TVRjeU16VXdNRGhhRncweU16RXdNVGN5TXpVd01qaGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVWRVNkUEJVWFFPdjRxSW55UmV0a0NoakVQSldPNlQ1U3hRZmdzb0tyN2twTXNjWDROZTcyTlNmM1BSSjgKelNjeGViTWxMaWVKYk9LR0prTlh3QXZLb3FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU3Y4QllYQXkybndNQ0Rvb1dsQTRxQVQ1M3JRakFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUF6cmNScm9rblEKSGQ5TFlVSUJVQ1l1U2pFVFFDYmtlc3FTOC92eWJHSXhOZ0loQUxjUFBvRFpselhjRGdsaVJCc01obkJHV3FWdgpwcldPWmE4UTVyTUEzYU1oCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVDdnVtK2N0V0JNQ2Jad3lGeEd6eERFa1RHMjVUcklXekJ6NHR3Ukx0OGRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVkVTZFBCVVhRT3Y0cUlueVJldGtDaGpFUEpXTzZUNVN4UWZnc29LcjdrcE1zY1g0TmU3MgpOU2YzUFJKOHpTY3hlYk1sTGllSmJPS0dKa05Yd0F2S29nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEwMTcyMzUwMDhaFw0yMzEwMTcyMzUwMjhaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEVESdPBUXQOv4qInyRetkChjEPJWO6T5SxQfgsoKr7kpMscX4Ne72NSf3PRJ8
    zScxebMlLieJbOKGJkNXwAvKoqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSv8BYXAy2nwMCDooWlA4qAT53rQjAKBggqhkjOPQQDAgNIADBFAiAzrcRroknQ
    Hd9LYUIBUCYuSjETQCbkesqS8/vybGIxNgIhALcPPoDZlzXcDgliRBsMhnBGWqVv
    prWOZa8Q5rMA3aMh
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.1
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.1
        linkerd.io/proxy-version: stable-2.12.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: cfbebd73279b6fd19cb8749556d929e2bbadbd406e33b88eed2ebd23d7277ccd
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.1
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.1
        linkerd.io/proxy-version: stable-2.12.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: cfbebd73279b6fd19cb8749556d929e2bbadbd406e33b88eed2ebd23d7277ccd
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.1
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
spec:
  concurrencyPolicy: Replace
  schedule: "00 00 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.1
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.1
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.1
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.1
        linkerd.io/proxy-version: stable-2.12.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: cfbebd73279b6fd19cb8749556d929e2bbadbd406e33b88eed2ebd23d7277ccd
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.1
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV3TVRjeU16VXdNRGhhRncweU16RXdNVGN5TXpVd01qaGFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFVkVTZFBCVVhRT3Y0cUlueVJldGtDaGpFUEpXTzZUNVN4UWZnc29LcjdrcE1zY1g0TmU3Mk5TZjNQUko4CiAgICAgICAgelNjeGViTWxMaWVKYk9LR0prTlh3QXZLb3FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlN2OEJZWEF5Mm53TUNEb29XbEE0cUFUNTNyUWpBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlBenJjUnJva25RCiAgICAgICAgSGQ5TFlVSUJVQ1l1U2pFVFFDYmtlc3FTOC92eWJHSXhOZ0loQUxjUFBvRFpselhjRGdsaVJCc01obkJHV3FWdgogICAgICAgIHByV09aYThRNXJNQTNhTWgKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUVDdnVtK2N0V0JNQ2Jad3lGeEd6eERFa1RHMjVUcklXekJ6NHR3Ukx0OGRvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVWRVNkUEJVWFFPdjRxSW55UmV0a0NoakVQSldPNlQ1U3hRZmdzb0tyN2twTXNjWDROZTcyCiAgICAgICAgTlNmM1BSSjh6U2N4ZWJNbExpZUpiT0tHSmtOWHdBdktvZz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qRXdNVGN5TXpVd01EaGFGdzB5TXpFd01UY3lNelV3TWpoYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVWRVNkUEJVWFFPdjRxSW55UmV0a0NoakVQSldPNlQ1U3hRZmdzb0tyN2twTXNjWDROZTcyTlNmM1BSSjgKICB6U2N4ZWJNbExpZUpiT0tHSmtOWHdBdktvcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCU3Y4QllYQXkybndNQ0Rvb1dsQTRxQVQ1M3JRakFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUF6cmNScm9rblEKICBIZDlMWVVJQlVDWXVTakVUUUNia2VzcVM4L3Z5YkdJeE5nSWhBTGNQUG9EWmx6WGNEZ2xpUkJzTWhuQkdXcVZ2CiAgcHJXT1phOFE1ck1BM2FNaAogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KcHJveHlJbml0OgogIHJ1bkFzUm9vdDogdHJ1ZQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
